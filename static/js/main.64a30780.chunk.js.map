{"version":3,"sources":["App.tsx","components/Goods/Goods.tsx","utils/uuid-creator.ts","index.tsx"],"names":["SortType","Goods","goods","this","props","map","good","dt","Date","getTime","replace","c","r","Math","random","floor","toString","createId","PureComponent","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","handleReset","handleSort","switchToVisible","reorderedGoods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,+FCZQC,EAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MAER,OACE,6BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAAqB,UAAQ,OAA7B,SACGA,GCfW,WACtB,IAAIC,GAAK,IAAIC,MAAOC,UAEpB,MAAO,uCAAuCC,QAAQ,SACpD,SAACC,GACC,IAAMC,GAAKL,EAAqB,GAAhBM,KAAKC,UAAiB,IAAM,EAI5C,OAFAP,EAAKM,KAAKE,MAAMR,EAAK,KAEP,MAANI,EACJC,EACEA,EAAK,EAAQ,GAAMI,SAAS,ODGrBC,aAPnB,GAA2BC,iBDDdC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGnB,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMoB,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUvB,EAASwB,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,YAAc,WACZ,EAAKD,SAAS,CACZJ,YAAY,EACZC,SAAUvB,EAASwB,QAfzB,EAmBEI,WAAa,SAACL,GACZ,EAAKG,SAAS,CAAEH,cApBpB,4CAuBE,WACE,IACEE,EAGEtB,KAHFsB,cACAG,EAEEzB,KAFFyB,WACAD,EACExB,KADFwB,YAEF,EAGIxB,KAAKkB,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAEIM,EAAkBP,GAAcC,IAAavB,EAASwB,KACtDM,EApEV,SACE5B,EADF,GAMG,IAHCoB,EAGF,EAHEA,WACAC,EAEF,EAFEA,SAGIQ,EAAY,YAAO7B,GAmBzB,OAjBA6B,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAKvB,EAASmC,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKlC,EAASqC,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAIThB,GACFS,EAAaQ,UAGRR,EA0CkBS,CACrBrB,EACA,CACEG,aACAC,aAIJ,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYpB,IAAavB,EAASmC,WAGtCS,QAAS,kBAAMhB,EAAW5B,EAASmC,WARrC,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYpB,IAAavB,EAASqC,SAGtCO,QAAS,kBAAMhB,EAAW5B,EAASqC,SARrC,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAarB,IAGjBsB,QAASnB,EARX,qBAaCI,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAASjB,EAHX,sBAUJ,cAAC,EAAD,CAAOzB,MAAO4B,WA/FtB,GAAyBe,aG7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.64a30780.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Goods } from './components/Goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  {\n    isReversed,\n    sortType,\n  }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  render() {\n    const {\n      handleReverse,\n      handleSort,\n      handleReset,\n    } = this;\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n    const switchToVisible = isReversed || sortType !== SortType.NONE;\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      {\n        isReversed,\n        sortType,\n      },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={handleReverse}\n          >\n            Reverse\n          </button>\n\n          {switchToVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <Goods goods={reorderedGoods} />\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { createId } from '../../utils/uuid-creator';\n\ninterface GoodsProps {\n  goods: string[];\n}\n\nexport class Goods extends PureComponent<GoodsProps> {\n  render() {\n    const { goods } = this.props;\n\n    return (\n      <ul>\n        {goods.map(good => (\n          <li key={createId()} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","export const createId = () => {\n  let dt = new Date().getTime();\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    (c) => {\n      const r = (dt + Math.random() * 16) % 16 || 0;\n\n      dt = Math.floor(dt / 16);\n\n      return (c === 'x'\n        ? r\n        : ((r && 0x3) || 0x8)).toString(16);\n    });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}